//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn_WebDocSach.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WEBDOCSACHEntities : DbContext
    {
        public WEBDOCSACHEntities()
            : base("name=WEBDOCSACHEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<GIAODICH_MUASACH> GIAODICH_MUASACH { get; set; }
        public virtual DbSet<GIAODICH_MUAVIP> GIAODICH_MUAVIP { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<NOIDUNGSACH> NOIDUNGSACHes { get; set; }
        public virtual DbSet<SACH> SACHes { get; set; }
        public virtual DbSet<SACH_LUOTXEM> SACH_LUOTXEM { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<THAMSO> THAMSOes { get; set; }
        public virtual DbSet<THELOAI> THELOAIs { get; set; }
    
        public virtual int Chuong_TimKiem(string maSach, string maChuong, string tenChuong)
        {
            var maSachParameter = maSach != null ?
                new ObjectParameter("maSach", maSach) :
                new ObjectParameter("maSach", typeof(string));
    
            var maChuongParameter = maChuong != null ?
                new ObjectParameter("maChuong", maChuong) :
                new ObjectParameter("maChuong", typeof(string));
    
            var tenChuongParameter = tenChuong != null ?
                new ObjectParameter("tenChuong", tenChuong) :
                new ObjectParameter("tenChuong", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Chuong_TimKiem", maSachParameter, maChuongParameter, tenChuongParameter);
        }
    
        public virtual int KhachHang_TimKiem(string maKH, string tenKH, string email, string isVIP)
        {
            var maKHParameter = maKH != null ?
                new ObjectParameter("maKH", maKH) :
                new ObjectParameter("maKH", typeof(string));
    
            var tenKHParameter = tenKH != null ?
                new ObjectParameter("tenKH", tenKH) :
                new ObjectParameter("tenKH", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isVIPParameter = isVIP != null ?
                new ObjectParameter("isVIP", isVIP) :
                new ObjectParameter("isVIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KhachHang_TimKiem", maKHParameter, tenKHParameter, emailParameter, isVIPParameter);
        }
    
        public virtual int NhanVien_TimKiem(string maNV, string tenNV, string email, string isAdmin)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("maNV", maNV) :
                new ObjectParameter("maNV", typeof(string));
    
            var tenNVParameter = tenNV != null ?
                new ObjectParameter("tenNV", tenNV) :
                new ObjectParameter("tenNV", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var isAdminParameter = isAdmin != null ?
                new ObjectParameter("isAdmin", isAdmin) :
                new ObjectParameter("isAdmin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NhanVien_TimKiem", maNVParameter, tenNVParameter, emailParameter, isAdminParameter);
        }
    
        public virtual int Sach_TimKiem(string maSach, string tenSach, string tacgia, string loai, string giaMin, string giaMax, string namXuatBan, string maTheLoai)
        {
            var maSachParameter = maSach != null ?
                new ObjectParameter("maSach", maSach) :
                new ObjectParameter("maSach", typeof(string));
    
            var tenSachParameter = tenSach != null ?
                new ObjectParameter("tenSach", tenSach) :
                new ObjectParameter("tenSach", typeof(string));
    
            var tacgiaParameter = tacgia != null ?
                new ObjectParameter("tacgia", tacgia) :
                new ObjectParameter("tacgia", typeof(string));
    
            var loaiParameter = loai != null ?
                new ObjectParameter("loai", loai) :
                new ObjectParameter("loai", typeof(string));
    
            var giaMinParameter = giaMin != null ?
                new ObjectParameter("giaMin", giaMin) :
                new ObjectParameter("giaMin", typeof(string));
    
            var giaMaxParameter = giaMax != null ?
                new ObjectParameter("giaMax", giaMax) :
                new ObjectParameter("giaMax", typeof(string));
    
            var namXuatBanParameter = namXuatBan != null ?
                new ObjectParameter("namXuatBan", namXuatBan) :
                new ObjectParameter("namXuatBan", typeof(string));
    
            var maTheLoaiParameter = maTheLoai != null ?
                new ObjectParameter("maTheLoai", maTheLoai) :
                new ObjectParameter("maTheLoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sach_TimKiem", maSachParameter, tenSachParameter, tacgiaParameter, loaiParameter, giaMinParameter, giaMaxParameter, namXuatBanParameter, maTheLoaiParameter);
        }
    
        public virtual int Sach_TimKiemLoai(string loai)
        {
            var loaiParameter = loai != null ?
                new ObjectParameter("loai", loai) :
                new ObjectParameter("loai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sach_TimKiemLoai", loaiParameter);
        }
    
        public virtual int Sach_TimKiemTL(string maTheLoai)
        {
            var maTheLoaiParameter = maTheLoai != null ?
                new ObjectParameter("maTheLoai", maTheLoai) :
                new ObjectParameter("maTheLoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sach_TimKiemTL", maTheLoaiParameter);
        }
    
        public virtual int Sach_TimKiemTSTG(string tenTK)
        {
            var tenTKParameter = tenTK != null ?
                new ObjectParameter("tenTK", tenTK) :
                new ObjectParameter("tenTK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sach_TimKiemTSTG", tenTKParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TimGDSTheoThang_Result> TimGDSTheoThang(Nullable<int> month1, Nullable<int> year1, Nullable<int> month2, Nullable<int> year2)
        {
            var month1Parameter = month1.HasValue ?
                new ObjectParameter("month1", month1) :
                new ObjectParameter("month1", typeof(int));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(int));
    
            var month2Parameter = month2.HasValue ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(int));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimGDSTheoThang_Result>("TimGDSTheoThang", month1Parameter, year1Parameter, month2Parameter, year2Parameter);
        }
    
        public virtual ObjectResult<TimGDVTheoThang_Result> TimGDVTheoThang(Nullable<int> month1, Nullable<int> year1, Nullable<int> month2, Nullable<int> year2)
        {
            var month1Parameter = month1.HasValue ?
                new ObjectParameter("month1", month1) :
                new ObjectParameter("month1", typeof(int));
    
            var year1Parameter = year1.HasValue ?
                new ObjectParameter("year1", year1) :
                new ObjectParameter("year1", typeof(int));
    
            var month2Parameter = month2.HasValue ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(int));
    
            var year2Parameter = year2.HasValue ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimGDVTheoThang_Result>("TimGDVTheoThang", month1Parameter, year1Parameter, month2Parameter, year2Parameter);
        }
    }
}
